(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return r}));var a=n(3),i=n(7),c=(n(0),n(103)),b={id:"schema-utils",title:"Schema utils"},o={unversionedId:"api/schema-utils",id:"api/schema-utils",isDocsHomePage:!1,title:"Schema utils",description:"Management",source:"@site/docs/api/schema-utils.md",slug:"/api/schema-utils",permalink:"/katachi/docs/api/schema-utils",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/schema-utils.md",version:"current",sidebar:"sidebar",previous:{title:"Hooks",permalink:"/katachi/docs/api/hooks"},next:{title:"Troubleshooting",permalink:"/katachi/docs/guides/troubleshooting"}},l=[{value:"Management",id:"management",children:[{value:"<code>renderSchema()</code>",id:"renderschema",children:[]},{value:"<code>composeSchema()</code>",id:"composeschema",children:[]},{value:"<code>produceSchema()</code>",id:"produceschema",children:[]}]},{value:"Modifiers",id:"modifiers",children:[{value:"<code>insertField()</code>",id:"insertfield",children:[]},{value:"<code>insertSection()</code>",id:"insertsection",children:[]},{value:"<code>removeField()</code>",id:"removefield",children:[]},{value:"<code>removeSection()</code>",id:"removesection",children:[]}]},{value:"Example",id:"example",children:[]}],m={toc:l};function r(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"management"},"Management"),Object(c.b)("h3",{id:"renderschema"},Object(c.b)("inlineCode",{parentName:"h3"},"renderSchema()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"renderSchema(schema);\n")),Object(c.b)("p",null,"Given a custom schema, it generates your React form"),Object(c.b)("h4",{id:"arguments"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"schema"),": Any valid schema that Katachi accepts")),Object(c.b)("h3",{id:"composeschema"},Object(c.b)("inlineCode",{parentName:"h3"},"composeSchema()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"composeSchema(modifier1, modifier2)(schema);\n")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"composeSchema")," is a composable function that allows you to generate a new\nmodified schema without hassle."),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"Since ",Object(c.b)("inlineCode",{parentName:"p"},"composeSchema")," returns a composable function, it needs to be\ninvoked two times. The first time with any modifier function, and a second time,\nwith the schema: ",Object(c.b)("inlineCode",{parentName:"p"},"composeSchema(insertField)(schema)"),". "))),Object(c.b)("h4",{id:"arguments-1"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"modifierFn"),": Any valid modifier function that Katachi provides")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"schema"),": Any valid schema"))),Object(c.b)("div",{className:"admonition admonition-info alert alert--info"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"You can create your own modifier function as long as you follow the\nschema shape \ud83d\udc4d"))),Object(c.b)("h3",{id:"produceschema"},Object(c.b)("inlineCode",{parentName:"h3"},"produceSchema()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"produceSchema(schema, (draftSchema) => {});\n")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"produceSchema")," allows you to work with immutable schema in a more convenient way."),Object(c.b)("h4",{id:"arguments-2"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"schema"),": Any valid schema")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"modifierFn(draftSchema)"),": Any valid callback function that you want to provide"))),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"In order to use this util make sure that you have installed ",Object(c.b)("inlineCode",{parentName:"p"},"immer")," in your project"),Object(c.b)("pre",{parentName:"div"},Object(c.b)("code",{parentName:"pre"},"yarn add immer\n")),Object(c.b)("pre",{parentName:"div"},Object(c.b)("code",{parentName:"pre"},"npm install immer\n")))),Object(c.b)("h2",{id:"modifiers"},"Modifiers"),Object(c.b)("h3",{id:"insertfield"},Object(c.b)("inlineCode",{parentName:"h3"},"insertField()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"insertField(myField);\n")),Object(c.b)("p",null,"Add a custom field at any position in your schema"),Object(c.b)("h4",{id:"arguments-3"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"[myField]"),Object(c.b)("em",{parentName:"p"},"(Object)"),": Any valid field object that Katachi accepts"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[position]"),Object(c.b)("em",{parentName:"li"},"(Number)"),": The position where you want your field to be\nrendered"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[sectionId]"),Object(c.b)("em",{parentName:"li"},"(String)"),": The section where you want to insert that field"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[field]"),Object(c.b)("em",{parentName:"li"},"(Object)"),": Any valid object that Katachi accepts",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[id]"),Object(c.b)("em",{parentName:"li"},"(String)"),": Id of your field that will be managed internally by\nKatachi"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[children]"),Object(c.b)("em",{parentName:"li"},"(React.ReactNode)"),": Any React valid component")))))),Object(c.b)("h3",{id:"insertsection"},Object(c.b)("inlineCode",{parentName:"h3"},"insertSection()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"insertSection(mySection);\n")),Object(c.b)("p",null,"Add a custom section at any position in your schema"),Object(c.b)("h4",{id:"arguments-4"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"[mySection]"),Object(c.b)("em",{parentName:"p"},"(Object)"),": Any valid section object that Katachi accepts"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[position]"),Object(c.b)("em",{parentName:"li"},"(Number)"),": The position where you want your section to be\nrendered"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[section]"),Object(c.b)("em",{parentName:"li"},"(Object)"),": The position where you want your field to be rendered",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[id]"),Object(c.b)("em",{parentName:"li"},"(String)"),": Id of your section that will be managed internally by\nKatachi"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[title]"),Object(c.b)("em",{parentName:"li"},"(String)"),": The title that your section will render"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[childrens]"),Object(c.b)("em",{parentName:"li"},"(Array)"),": Array of React components",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[children]"),Object(c.b)("em",{parentName:"li"},"(React.ReactNode)"),": Any React valid component"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[testId?]"),Object(c.b)("em",{parentName:"li"},"(String)"),": Helper to search by id in your tests")))))),Object(c.b)("h3",{id:"removefield"},Object(c.b)("inlineCode",{parentName:"h3"},"removeField()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"removeField(fieldId);\n")),Object(c.b)("p",null,"Remove any field by its ID"),Object(c.b)("h4",{id:"arguments-5"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[fieldId]"),Object(c.b)("em",{parentName:"li"},"(String)"),": Any valid field id")),Object(c.b)("h3",{id:"removesection"},Object(c.b)("inlineCode",{parentName:"h3"},"removeSection()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"removeSection(sectionId);\n")),Object(c.b)("p",null,"Remove any section by its ID"),Object(c.b)("h4",{id:"arguments-6"},"Arguments"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"[sectionId]"),Object(c.b)("em",{parentName:"li"},"(String)"),": Any valid section id")),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-tsx"},"import { renderSchema, composeSchema } from 'katachi';\nimport { mySchema } from './my-schema';\n\nconst customSchema = composeSchema(\n  removeSection('section_3'),\n  removeField('field_4'),\n  insertSection({\n    position: 1,\n    section: {\n      id: 'section-2-id',\n      title: 'Section 2 Title',\n      childrens: [\n        {\n          children: <div data-testid=\"section-2-children\" />,\n        },\n      ],\n      testId: 'section-2-id',\n    },\n  }),\n  insertField({\n    position: 1,\n    sectionId: 'section_1',\n    field: {\n      children: <input />,\n      id: 'field-dynamic',\n    },\n  })\n)(mySchema);\n\nfunction MyApp() {\n  return renderSchema(customSchema);\n}\n")))}r.isMDXComponent=!0}}]);